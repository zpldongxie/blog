{"version":3,"sources":["components/HeadNav/index.js","components/ArticleList/index.js","views/Resource/index.js","views/Learn/index.js","views/AboutMe/index.js","views/Tools/index.js","layouts/Default/index.js","layouts/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","HeadNav","state","current","id","style","position","zIndex","width","className","size","src","mode","defaultSelectedKeys","this","Item","key","to","Component","IconText","type","text","marginRight","ArticleList","props","listData","pageSize","itemLayout","pagination","onChange","page","console","log","dataSource","footer","renderItem","item","title","actions","extra","alt","image","Meta","href","description","Resource","self","fetch","method","then","res","json","data","setState","map","desc","content","Learn","AboutMe","Tools","Content","Footer","DefaultLayout","path","match","url","component","exact","textAlign","LoginLayout","App","LoginUser","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81d9b1f6.chunk.js","sourcesContent":["/*\r\n * @description: 导航组件\r\n * @author: zpl\r\n * @Date: 2019-12-03 17:28:34\r\n * @LastEditTime: 2019-12-04 16:52:44\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Layout, Menu, Avatar } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './index.less'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default class HeadNav extends Component {\r\n    state = {\r\n        current: 'home',\r\n    }\r\n    render() {\r\n        return (\r\n            <Header id=\"headNav\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n                <div className=\"nav-logo-wrap\">\r\n                    <Avatar size={40} src=\"http://img0.imgtn.bdimg.com/it/u=2881388121,25353099&fm=26&gp=0.jpg\" />\r\n                </div>\r\n                <div className=\"nav-list-wrap\">\r\n                    <Menu\r\n                        mode=\"horizontal\"\r\n                        defaultSelectedKeys={[this.state.current]}\r\n                    >\r\n                        <Menu.Item key=\"home\"><Link to=\"/\">教程分享</Link></Menu.Item>\r\n                        <Menu.Item key=\"aboutme\"><Link to=\"/learn\">学习笔记</Link></Menu.Item>\r\n                        <Menu.Item key=\"article\"><Link to=\"/aboutMe\">个人简历</Link></Menu.Item>\r\n                        <Menu.Item key=\"resource\"><Link to=\"/tools\">实用工具</Link></Menu.Item>\r\n                    </Menu>\r\n                </div>\r\n            </Header>\r\n        )\r\n    }\r\n\r\n}","/*\r\n * @description: 文章列表\r\n * @author: zpl\r\n * @Date: 2019-12-04 16:42:36\r\n * @LastEditTime: 2019-12-05 10:31:46\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react'\r\nimport { List, Icon } from 'antd';\r\n\r\nimport './index.less'\r\n\r\nconst IconText = ({ type, text }) => (\r\n  <span>\r\n    <Icon type={type} style={{ marginRight: 8 }} />\r\n    {text}\r\n  </span>\r\n);\r\n\r\nexport default class ArticleList extends Component {\r\n  render() {\r\n    const { listData, pageSize } = this.props;\r\n    return (\r\n      <List\r\n        itemLayout=\"vertical\"\r\n        size=\"large\"\r\n        pagination={{\r\n          onChange: page => {\r\n            console.log(page);\r\n          },\r\n          pageSize: pageSize,\r\n        }}\r\n        dataSource={listData}\r\n        footer={\r\n          <div>\r\n            <b>ant design</b> footer part\r\n          </div>\r\n        }\r\n        renderItem={item => (\r\n          <List.Item\r\n            key={item.title}\r\n            actions={[\r\n              <IconText type=\"star-o\" text=\"156\" key=\"list-vertical-star-o\" />,\r\n              <IconText type=\"like-o\" text=\"156\" key=\"list-vertical-like-o\" />,\r\n              <IconText type=\"message\" text=\"2\" key=\"list-vertical-message\" />,\r\n            ]}\r\n            extra={\r\n              <img\r\n                alt=\"logo\"\r\n                src={item.image}\r\n              />\r\n            }\r\n          >\r\n            <List.Item.Meta\r\n              title={<a href={item.href}>{item.title}</a>}\r\n              description={item.description}\r\n            />\r\n            {/* {item.content} */}\r\n          </List.Item>\r\n        )}\r\n      />\r\n    )\r\n  }\r\n}\r\n","/*\r\n * @description: 教程分享\r\n * @author: zpl\r\n * @Date: 2019-12-04 09:22:48\r\n * @LastEditTime: 2019-12-05 10:16:51\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react'\r\nimport ArticleList from '../../components/ArticleList'\r\n\r\nexport default class Resource extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listData: []\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const {listData} = this.state;\r\n    return (\r\n      <div>\r\n        <ArticleList listData={listData} pageSize={6} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const self = this;\r\n    fetch(\"/api/news\", { method: 'GET' }).then(\r\n      function (res) {\r\n        console.log(res);\r\n        res.json().then(function (data) {\r\n          console.log(data);\r\n          self.setState({\r\n            listData: data.map(item => {\r\n              return {\r\n                id: item.id,\r\n                href: \"http://www.baidu.com\",\r\n                title: item.title,\r\n                image: item.image,\r\n                description: item.desc,\r\n                content: item.content\r\n              }\r\n            })\r\n          });\r\n        });\r\n      }\r\n    )\r\n  }\r\n}\r\n","/*\r\n * @description: 学习笔记\r\n * @author: zpl\r\n * @Date: 2019-12-04 09:22:10\r\n * @LastEditTime: 2019-12-05 09:24:43\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Learn extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        学习笔记\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n * @description: 个人简历\r\n * @author: zpl\r\n * @Date: 2019-12-04 09:18:40\r\n * @LastEditTime: 2019-12-04 16:36:32\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react'\r\n\r\nexport default class AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        个人简历\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n * @description: 实用工具\r\n * @author: zpl\r\n * @Date: 2019-12-04 09:21:27\r\n * @LastEditTime: 2019-12-04 16:41:41\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Tools extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        实用工具\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n * @description: \r\n * @author: zpl\r\n * @Date: 2019-12-03 17:07:52\r\n * @LastEditTime: 2019-12-04 16:39:00\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react'\r\nimport { Layout } from 'antd'\r\nimport HeadNav from '../../components/HeadNav'\r\n\r\nimport './index.less'\r\n\r\nimport { Route } from 'react-router-dom'\r\nimport Resource from '../../views/Resource'\r\nimport Learn from '../../views/Learn'\r\nimport AboutMe from '../../views/AboutMe'\r\nimport Tools from '../../views/Tools'\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nexport default class DefaultLayout extends Component {\r\n    render() {\r\n        return (\r\n            <Layout id=\"defaultLayout\">\r\n                <HeadNav />\r\n                <Content>\r\n                    <div className=\"mainCon\">\r\n                        <Route path={this.props.match.url} component={Resource} exact />\r\n                        <Route path={this.props.match.url + 'learn'} component={Learn} />\r\n                        <Route path={this.props.match.url + 'aboutMe'} component={AboutMe} />\r\n                        <Route path={this.props.match.url + 'tools'} component={Tools} />\r\n                    </div>\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>zpl ©2019 Created by Ant Design</Footer>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class LoginLayout extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"loginLayout\">\r\n                LoginUser\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*\n * @description: \n * @author: zpl\n * @Date: 2019-12-03 14:20:40\n * @LastEditTime: 2019-12-04 15:48:33\n * @LastEditors: zpl\n */\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport DefaultLayout from './layouts/Default'\nimport LoginUser from './layouts/Login'\n\n// import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/login\" component={LoginUser}/>\n          <Route path=\"/\" component={DefaultLayout} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}