{"version":3,"sources":["common/constant.js","components/HeadNav/index.jsx","utils/https.js","components/ArticleList/index.jsx","views/Resource/index.jsx","views/Learn/index.js","views/AboutMe/index.jsx","views/WebTools/index.js","layouts/Default/index.jsx","components/Login/index.jsx","layouts/Login/index.jsx","App.jsx","serviceWorker.js","index.js","common/api.js"],"names":["exports","BANNERIMGS","home","learn","aboutMe","tools","Header","HeadNav","props","state","current","this","menu","mode","defaultSelectedKeys","onSelect","key","setState","Item","to","className","id","style","position","zIndex","width","size","src","process","overlay","trigger","type","alt","Component","service","axios","create","baseURL","baseUrl","timeout","interceptors","request","use","config","error","console","Promise","reject","response","IconText","text","marginRight","defaultProps","ArticleList","listData","pageSize","itemLayout","pagination","onChange","page","log","dataSource","renderItem","item","actions","favorite_sum","like_sum","comment_sum","extra","Meta","title","href","target","rel","description","Resource","getDateList","https","post","postGetList","then","res","status","data","length","map","image","desc","content","catch","err","Learn","AboutMe","Tools","Content","Footer","Default","match","path","url","component","exact","WebTools","textAlign","Login","email","password","login","bind","handleOk","handleChange","handleCancel","loginSuccess","loginFailure","postLogin","withCredentials","code","userInfo","_id","name","avatar","window","sessionStorage","JSON","stringify","message","success","reg","RegExp","test","warn","event","value","visible","top","onCancel","footer","marginBottom","prefix","color","placeholder","onClick","location","App","LoginUser","DefaultLayout","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","postGetContent"],"mappings":"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","file":"static/js/main.e35a9206.chunk.js","sourcesContent":["/*\r\n * @description: 常量定义\r\n * @author: zpl\r\n * @Date: 2019-12-06 09:27:31\r\n * @LastEditTime: 2019-12-13 10:46:06\r\n * @LastEditors: zpl\r\n */\r\n// bannerImages\r\nexports.BANNERIMGS = {\r\n  home: 'jcfx.jpg', learn: 'xxbj.jpg', aboutMe: 'grjl.jpg', tools: 'sygj.jpg',\r\n};\r\n","/*\r\n * @description: 导航组件\r\n * @author: zpl\r\n * @Date: 2019-12-03 17:28:34\r\n * @LastEditTime: 2019-12-12 11:00:48\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Layout, Menu, Dropdown, Avatar, Icon,\r\n} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { BANNERIMGS } from '../../common/constant';\r\n\r\nimport './index.less';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default class HeadNav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 'home',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { current } = this.state;\r\n    const menu = (\r\n      <Menu\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={[current]}\r\n        onSelect={({\r\n          key,\r\n        }) => {\r\n          this.setState({ current: key });\r\n        }}\r\n      >\r\n        <Menu.Item key=\"home\"><Link to=\"/\">教程分享</Link></Menu.Item>\r\n        <Menu.Item key=\"learn\"><Link to=\"/learn\">学习笔记</Link></Menu.Item>\r\n        <Menu.Item key=\"aboutMe\"><Link to=\"/aboutMe\">个人简历</Link></Menu.Item>\r\n        <Menu.Item key=\"tools\"><Link to=\"/tools\">实用工具</Link></Menu.Item>\r\n      </Menu>\r\n    );\r\n    return (\r\n      <div className=\"commonHeader\">\r\n        <Header id=\"headNav\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n          <div className=\"nav-logo-wrap\">\r\n            <Avatar size={40} src={`${process.env.PUBLIC_URL}avatar.jpg`} />\r\n          </div>\r\n          <div className=\"nav-list-wrap\">\r\n            {menu}\r\n          </div>\r\n          <Dropdown overlay={menu} trigger={['click']}><Icon type=\"menu\" /></Dropdown>\r\n        </Header>\r\n        <img alt=\"\" src={process.env.PUBLIC_URL + BANNERIMGS[current]} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\n * @description: 封装http请求\r\n * @author: zpl\r\n * @Date: 2019-12-12 08:41:24\r\n * @LastEditTime: 2019-12-13 10:49:15\r\n * @LastEditors: zpl\r\n */\r\n/* eslint no-console: \"off\" */\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../common/api';\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: baseUrl, // api的base_url\r\n  timeout: 50000, // 请求超时时间\r\n});\r\n\r\n// console.log('process.env.BASE_URL',process.env.BASE_URL)\r\n// request拦截器 axios的一些配置\r\nservice.interceptors.request.use(\r\n  (config) => config,\r\n  (error) => {\r\n    // Do something with request error\r\n    console.error('error:', error); // for debug\r\n    Promise.reject(error);\r\n  },\r\n);\r\n\r\n// respone拦截器 axios的一些配置\r\nservice.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    console.error(`error:${error}`); // for debug\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default { ...service };\r\n","/*\r\n * @description: 文章列表\r\n * @author: zpl\r\n * @Date: 2019-12-04 16:42:36\r\n * @LastEditTime: 2019-12-06 14:21:31\r\n * @LastEditors: zpl\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, Icon } from 'antd';\r\n\r\nimport './index.less';\r\n\r\nconst IconText = ({ type, text }) => (\r\n  <span>\r\n    <Icon type={type} style={{ marginRight: 8 }} />\r\n    {text}\r\n  </span>\r\n);\r\nIconText.propTypes = {\r\n  type: PropTypes.oneOf(['star-o', 'like-o', 'message']).isRequired,\r\n  text: PropTypes.number,\r\n};\r\nIconText.defaultProps = {\r\n  text: 0,\r\n};\r\n\r\nconst ArticleList = (props) => {\r\n  const { listData, pageSize } = props;\r\n  return (\r\n    <List\r\n      itemLayout=\"vertical\"\r\n      size=\"large\"\r\n      pagination={{\r\n        onChange: (page) => {\r\n          // TODO: 待处理\r\n          // eslint-disable-next-line no-console\r\n          console.log(page);\r\n        },\r\n        pageSize,\r\n      }}\r\n      dataSource={listData}\r\n      renderItem={(item) => (\r\n        <List.Item\r\n          key={item.id}\r\n          actions={[\r\n            <IconText type=\"star-o\" text={item.favorite_sum} key=\"list-vertical-star-o\" />,\r\n            <IconText type=\"like-o\" text={item.like_sum} key=\"list-vertical-like-o\" />,\r\n            <IconText type=\"message\" text={item.comment_sum} key=\"list-vertical-message\" />,\r\n          ]}\r\n          extra={(\r\n            <img\r\n              alt=\"logo\"\r\n              // src={item.image}\r\n              src={`${process.env.PUBLIC_URL}testImg.jpg`}\r\n            />\r\n          )}\r\n        >\r\n          <List.Item.Meta\r\n            title={<a href={item.href} target=\"_blank\" rel=\"noopener noreferrer\">{item.title}</a>}\r\n            description={item.description}\r\n          />\r\n          {/* {item.content} */}\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nArticleList.propTypes = {\r\n  listData: PropTypes.array,\r\n  pageSize: PropTypes.number,\r\n};\r\n\r\nArticleList.defaultProps = {\r\n  listData: [],\r\n  pageSize: 10,\r\n};\r\n\r\nexport default ArticleList;\r\n","/*\r\n * @description: 教程分享\r\n * @author: zpl\r\n * @Date: 2019-12-04 09:22:48\r\n * @LastEditTime: 2019-12-12 16:10:30\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react';\r\n\r\nimport { postGetList } from '../../common/api';\r\nimport https from '../../utils/https';\r\nimport ArticleList from '../../components/ArticleList/index';\r\n\r\nexport default class Resource extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDateList();\r\n  }\r\n\r\n  getDateList() {\r\n    https.post(postGetList).then((res) => {\r\n      if (res.status === 200 && res.data && res.data.length) {\r\n        this.setState({\r\n          listData: res.data.map((item) => ({\r\n            id: item.id,\r\n            href: 'http://www.baidu.com',\r\n            title: item.title,\r\n            image: item.image,\r\n            description: item.desc,\r\n            content: item.content,\r\n            favorite_sum: item.favorite_sum,\r\n            like_sum: item.like_sum,\r\n            comment_sum: item.comment_sum,\r\n          })),\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      // TODO: 应遵循eslint规范，此处不使用console，改用其他方式记录错误\r\n      // eslint-disable-next-line no-console\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { listData } = this.state;\r\n    return (\r\n      <div>\r\n        <ArticleList listData={listData} pageSize={6} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\n * @description: 学习笔记\r\n * @author: zpl\r\n * @Date: 2019-12-04 09:22:10\r\n * @LastEditTime: 2019-12-05 09:24:43\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Learn extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        学习笔记\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n * @description: 个人简历\r\n * @author: zpl\r\n * @Date: 2019-12-04 09:18:40\r\n * @LastEditTime: 2019-12-04 16:36:32\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react';\r\n\r\nexport default class AboutMe extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        个人简历\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\n * @description: 实用工具\r\n * @author: zpl\r\n * @Date: 2019-12-04 09:21:27\r\n * @LastEditTime: 2019-12-04 16:41:41\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Tools extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        实用工具\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n * @description:\r\n * @author: zpl\r\n * @Date: 2019-12-03 17:07:52\r\n * @LastEditTime: 2019-12-12 11:11:27\r\n * @LastEditors: zpl\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Layout, Divider } from 'antd';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nimport './index.less';\r\n\r\nimport HeadNav from '../../components/HeadNav';\r\nimport Resource from '../../views/Resource/index';\r\nimport Learn from '../../views/Learn';\r\nimport AboutMe from '../../views/AboutMe';\r\nimport WebTools from '../../views/WebTools';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nconst Default = (props) => {\r\n  const { match } = props;\r\n\r\n  return (\r\n    <Layout id=\"defaultLayout\">\r\n      <HeadNav />\r\n      <Content>\r\n        <div className=\"mainCon\">\r\n          <Route path={match.url} component={Resource} exact />\r\n          <Route path={`${match.url}learn`} component={Learn} />\r\n          <Route path={`${match.url}aboutMe`} component={AboutMe} />\r\n          <Route path={`${match.url}tools`} component={WebTools} />\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>\r\n        <div>\r\n          <a href=\"https://tongxuelu.zhupengliang.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">Classmates</a>\r\n          <Divider type=\"vertical\" />\r\n          <a href=\"https://www.w3school.com.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">w3school</a>\r\n          <Divider type=\"vertical\" />\r\n          <a href=\"https://ant.design/index-cn\" target=\"_blank\" rel=\"noopener noreferrer\">ant.design</a>\r\n          <Divider type=\"vertical\" />\r\n          <a href=\"https://docs.nestjs.com\" target=\"_blank\" rel=\"noopener noreferrer\">NestJS Documentation</a>\r\n          <Divider type=\"vertical\" />\r\n          <Link to=\"/login\">manager</Link>\r\n        </div>\r\n        zpl ©2019 Created by Ant Design\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nDefault.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Default;\r\n","/*\r\n * @description: 登录模板\r\n * @author: zpl\r\n * @Date: 2019-12-11 10:33:11\r\n * @LastEditTime: 2019-12-11 17:18:23\r\n * @LastEditors: zpl\r\n */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Modal, Input, Icon, message, Button,\r\n} from 'antd';\r\nimport { postLogin } from '../../common/api';\r\nimport https from '../../utils/https';\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n    };\r\n    this.login = this.login.bind(this);\r\n    this.handleOk = this.handleOk.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  login({ email, password }) {\r\n    const { handleCancel, loginSuccess, loginFailure } = this.props;\r\n    https.post(\r\n      postLogin,\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      { withCredentials: true },\r\n    ).then((res) => {\r\n      if (res.status === 200 && res.data.code === 0) {\r\n        loginSuccess(res.data);\r\n        const userInfo = {\r\n          _id: res.data.data.id,\r\n          name: res.data.data.name,\r\n          avatar: res.data.data.avatar,\r\n        };\r\n        window.sessionStorage.userInfo = JSON.stringify(userInfo);\r\n        message.success(res.data.message, 1);\r\n        handleCancel();\r\n        this.setState({\r\n          email: '',\r\n          password: '',\r\n        });\r\n      } else {\r\n        loginFailure(res.data.message);\r\n        message.error(res.data.message, 1);\r\n      }\r\n    }).catch((err) => {\r\n      // TODO: 应遵循eslint规范，此处不使用console，改用其他方式记录错误\r\n      // eslint-disable-next-line no-console\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  handleOk() {\r\n    const { email, password } = this.state;\r\n    const reg = new RegExp(\r\n      '^[a-z0-9]+([._\\\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$',\r\n    );\r\n    if (!email) {\r\n      message.warn('邮箱不能为空！');\r\n    } else if (!reg.test(email)) {\r\n      message.warn('请输入格式正确的邮箱！');\r\n    } else if (!password) {\r\n      message.warn('密码不能为空');\r\n    } else {\r\n      this.login(this.state);\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { visible, handleCancel } = this.props;\r\n    const { email, password } = this.state;\r\n    return (\r\n      <Modal\r\n        title=\"登录\"\r\n        style={{ top: '25%' }}\r\n        visible={visible}\r\n        onCancel={handleCancel}\r\n        width={400}\r\n        footer={null}\r\n      >\r\n        <div className=\"login-input\">\r\n          <Input\r\n            style={{ marginBottom: 20 }}\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            name=\"email\"\r\n            placeholder=\"email\"\r\n            value={email}\r\n            onChange={this.handleChange}\r\n          />\r\n          <Input\r\n            style={{ marginBottom: 40 }}\r\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"login-submit\">\r\n          <Button\r\n            style={{ width: '100%', marginBottom: '20px' }}\r\n            type=\"primary\"\r\n            onClick={() => { this.handleOk(); }}\r\n          >\r\n            登录\r\n          </Button>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  visible: PropTypes.bool,\r\n  handleCancel: PropTypes.func,\r\n  loginSuccess: PropTypes.func,\r\n  loginFailure: PropTypes.func,\r\n};\r\n\r\nLogin.defaultProps = {\r\n  visible: false,\r\n  handleCancel: () => { },\r\n  loginSuccess: () => { },\r\n  loginFailure: () => { },\r\n};\r\n","/*\r\n * @description:\r\n * @author: zpl\r\n * @Date: 2019-12-03 17:09:39\r\n * @LastEditTime: 2019-12-12 10:51:25\r\n * @LastEditors: zpl\r\n */\r\nimport React from 'react';\r\nimport Login from '../../components/Login';\r\n\r\nexport default () => (\r\n  <Login\r\n    visible\r\n    handleCancel={() => { window.location.href = '/'; }}\r\n    loginSuccess={() => { }}\r\n    loginFailure={() => { }}\r\n  />\r\n);\r\n","/*\n * @description:\n * @author: zpl\n * @Date: 2019-12-03 14:20:40\n * @LastEditTime: 2019-12-05 17:20:32\n * @LastEditors: zpl\n */\nimport React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport DefaultLayout from './layouts/Default';\nimport LoginUser from './layouts/Login';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/login\" component={LoginUser} />\n          <Route path=\"/\" component={DefaultLayout} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\r\n * @description: 统一配置请求接口\r\n * @author: zpl\r\n * @Date: 2019-12-13 09:44:55\r\n * @LastEditTime: 2019-12-13 15:52:59\r\n * @LastEditors: zpl\r\n */\r\nlet baseUrl = '/api';\r\nif (process.env.NODE_ENV === 'development') {\r\n  baseUrl = '/mock/api';\r\n}\r\n\r\nexports.baseUrl = baseUrl;\r\nexports.postLogin = '/login';\r\nexports.postGetList = '/getList';\r\nexports.postGetContent = '/getContent';\r\n"],"sourceRoot":""}